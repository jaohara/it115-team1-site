@use "sass:map";

// Google fonts
// TODO: Remove unused fonts!
@import url('https://fonts.googleapis.com/css2?family=Inter+Tight:wght@300;400;700&family=Inter:wght@300;400;700&family=Oi&family=Source+Sans+Pro:wght@300;400;700;900&family=Fredoka+One&display=swap');


// $main-font: "Inter";
$main-font: "Inter Tight";
// $main-font: "Source Sans Pro";

$header-font: $main-font; 
$logo-font: $main-font;
$body-font: $main-font;

// raw colors
$alice-blue: #DBE4EE;
$black-coffee: #2F242C;
$blue-jeans: #3FABF8;
$feldgrau: #586F6B;
$french-blue: #1278C1;
$green-pigment: #55A05B;
$ghost-white: #F0EFF4;
$mango-tango: #ED7D3A;
$mint-cream: #E1EAE2;
$orange-yellow-crayola: #FFD16E;
$peach: #FFE4AA;
$iceberg: #81A4CD;
$international-orange-aerospace: #F05D23;
$old-burgundy: #3B252C;
$oxford-blue: #191F34;
$red-pigment: #F02424;
$space-cadet:#21283E;
$steel-blue: #3E7CB1;
$dark-sea-green: #7BB680;
$yale-blue: #054A91;

$image-box-color: rgba(0,0,0,0.32);

/*
  I should expect the following: 
    - accent-color
    - accent-secondary
    - background-color
    - background-alt
    - text-color
    - text-alt
    - text-color-inverted - what do I use this for?
*/
$themes: (
  light: (
    // accent-color: $french-blue,
    accent-color: $red-pigment,
    accent-secondary: $green-pigment,
    background-color: $ghost-white,
    background-alt: $alice-blue,
    image-box-color: rgba(255,255,255,0.8),
    text-color: $black-coffee,
    text-alt: $black-coffee,
    text-color-inverted: $ghost-white,
    ),
  dark: (
    accent-color: $blue-jeans,
    accent-secondary: $peach,
    background-alt: $space-cadet,
    background-color: $oxford-blue,
    text-color: $ghost-white,
    text-alt: $alice-blue,
    text-color-inverted: $black-coffee,
    image-box-color: rgba(0,0,0,0.8),
  )
);

// assign colors to roles
$background-color: $ghost-white;
$background-alt: $alice-blue;
// $background-alt: $corn;
$text-color: $black-coffee;
// $text-alt: $dark-sienna;
$text-color-inverted: $ghost-white;
// $accent-color: $international-orange-aerospace;
$accent-color: $yale-blue;
// $accent-color: $dark-sienna;
// $accent-color: $corn;
// $accent-secondary: $

// various shared ui styling
$common-border-radius: 8px;
$common-border: 3px;
$common-line-height: 2.4rem;
$common-margin-bottom: 1.3rem;
$common-padding: 1.2rem;
$common-transition-time: 150ms;

// ======
// mixins
// ======
@mixin accent-border {
  border-bottom: $common-border solid map.get($themes, "light", "background-alt");

  .dark & {
    border-bottom: $common-border solid map.get($themes, "dark", "background-alt");
  }
}

@mixin alt-background-for-inline-item {
  @include common-transitions();
  background-color: map.get($themes, "light", "background-alt");
  border-radius: $common-border-radius;
  border: 2px solid map.get($themes, "light", "background-alt");
  padding: .15em .2em;
  
  .dark & {
    background-color: map.get($themes, "dark", "background-alt");
    border: 2px solid map.get($themes, "dark", "background-alt");
  }
}

@mixin body-font {
  font-family: $body-font;
  font-size: 1.1rem;
  font-weight: normal;
  line-height: $common-line-height;
}

@mixin common-transitions() {
  transition: 
    background-color $common-transition-time,
    border $common-transition-time,
    border-radius $common-transition-time,
    box-shadow $common-transition-time,
    color $common-transition-time,
    filter $common-transition-time,
    opacity $common-transition-time,
    padding $common-transition-time;
  }
  
  // TODO: .... make sure this doesn't get too ridiculous
@mixin common-transitions-with-transform() {
  transition: 
    background-color $common-transition-time,
    border $common-transition-time,
    border-radius $common-transition-time,
    box-shadow $common-transition-time,
    color $common-transition-time,
    filter $common-transition-time,
    opacity $common-transition-time,
    // padding $common-transition-time,
    padding 500ms,
    transform $common-transition-time,
    width $common-transition-time;
}

@mixin hide-nav-item-above-screen {
  height: 1px;
  opacity: 0;
  width: 1px;
  transform: translateY(-10rem);
}

@mixin margin-reset {
  margin: 0;
  margin-bottom: $common-margin-bottom;
}

@mixin responsive-widths {
  //375px
  width: 100%;

  //768px
  @media (min-width: 768px) {
    // margin: 0 auto;
    width: 768px;
  }
  //1280px
  @media (min-width: 1280px) {
    // width: 1280px;
  }
  //1920px
  @media (min-width: 1920px) {
    // width: 1920px;
  }
}

@mixin show-hidden-nav-item {
  height: initial;
  opacity: 1;
  transform: translateY(0rem);
  width: initial;
}


// ===============
// general styling
// ===============
* {
  box-sizing: border-box;
}

html {
  @include common-transitions();
  background-color: map.get($themes, "light", "background-color");
  // color: $text-color;
  color: map.get($themes, "light", "text-color");
  font-family: $main-font;

  &.dark {
    background-color: map.get($themes, "dark", "background-color");
    color: map.get($themes, "dark", "text-color");
  }
}

h1:not(#header-logo), h2, h3 {
  @include accent-border();
  @include common-transitions();
  color: map.get($themes, "light", "text-color");;
  // background-color: $accent-color;
  margin: 0;
  margin-bottom: $common-margin-bottom;
  // border-bottom: $common-border solid map.get($themes, "light", "background-alt");
  padding-bottom: .5rem;

  html.dark & {
    color: map.get($themes, "dark", "text-color");
  }
}

h1 {
  font-size: 2.8rem;
}

h2 {
  font-size: 2.2rem;
}

h3 {
  font-size: 1.8rem;
}

code:not( pre > code) {
  @include alt-background-for-inline-item();
  color: map.get($themes, "light", "accent-color");
  
  .dark & {
    color: map.get($themes, "dark", "accent-color");
  }
}

pre {
  // margin
  width: 100%;

  @media (min-width: 1280px) {
    width: 125%;
    transform: translateX(-10%);
  }
}

a:not(.main-nav-link, .logo-link) {
  @include common-transitions();
  // border-radius: $common-border-radius;
  border: 2px solid transparent;
  border-bottom: 2px solid map.get($themes, "light", "background-alt");
  color: map.get($themes, "light", "accent-color");
  margin: 0 -.1em;
  padding: .15em .2em;
  text-decoration: none;
  
  .dark & {
    border-bottom: 2px solid map.get($themes, "dark", "background-alt");
    color: map.get($themes, "dark", "accent-color");
  }

  
  &:hover {
    @include alt-background-for-inline-item();
    color: map.get($themes, "light", "accent-color");
    
    .dark & {
      color: map.get($themes, "dark", "text-color");;
    }
  }

  &:active {
    color: $accent-color;
  }
}

ul:not(.main-nav, .small-nav), ol {
  @include margin-reset();
  // border-left: $common-border solid background-alt;
  // background-color: $background-alt;
  border-radius: $common-border-radius;
  padding: .6rem 2.4rem;
  // padding-left: 2.4rem;
}

li {
  @include body-font();
  line-height: 2.4rem;
  padding-left: .4rem;
}

li:not(.main-nav-list-item)::marker {
  @include common-transitions();
  color: map.get($themes, "light", "accent-color");
  font-weight: bold;

  .dark & {
    color: map.get($themes, "dark", "accent-color");
  }
}

p {
  @include body-font();
  @include margin-reset();
}

#image-box {
  @include common-transitions();
  align-items: center;
  background-color: map.get($themes, "light", "image-box-color");
  cursor: pointer;
  display: flex;
  height: 100vh;
  left: right;
  justify-content: center;
  opacity: 0;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: -100;

  .dark & {
    background-color: map.get($themes, "dark", "image-box-color");
  }
  
  &.active {
    opacity: 1;
    z-index: 100;
  }
}

#image-box-image {
  border-radius: $common-border-radius;
  width: 100%;
  margin: 0 auto;
  max-width: 100vw;
}

.image-wrapper {
  margin: 2rem 0;
  width: 100%;
}

img:not(#image-box-image) {
  @include common-transitions-with-transform();
  width: 100%;

  &:hover {
    border-radius: $common-border-radius;
    cursor: pointer;
    transform: scale(1.025);
  }

  @media (min-width: 1280px) {
    width: 125%;
    transform: translateX(-10%);

    &:hover {
      transform: scale(1.05) translateX(-10%);
    }
  }

}

// ==============
// header styling
// ==============
header {
  @include common-transitions();
  // @include responsive-widths();
  align-items: center;
  background-color: map.get($themes, "light", "background-color");
  box-shadow: 0px 4px 8px map.get($themes, "light", "background-color");
  // border-top: 8px solid map.get($themes, "light", "accent-color");
  display: flex;
  // flex-direction: column;
  justify-content: space-between;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 2;
  
  .dark & {
    background-color: map.get($themes, "dark", "background-color");
    box-shadow: 0px 4px 8px map.get($themes, "dark", "background-color");
  
  }
}

.header-wrapper{
  margin: 0 auto;
  @include responsive-widths();
  display: flex;
  justify-content: space-between;
  align-items: center;

  @media (min-width: 1280px) {
    width: 1024px;
  }
  //1920px
  @media (min-width: 1920px) {
    width: 1440px;
  }
}

#header-logo {
  font-family: "Inter";
  font-size: 1.8rem;
  margin: .5rem 0 0;
  font-weight: bold;
  // width: 100%;
  // display: inline;
}

.logo-link{
  @include common-transitions();
  // color: $accent-color;
  @include accent-border();
  border-color: transparent;
  color: map.get($themes, "light", "text-color");
  text-decoration: none;
  
  .dark & {
    color: map.get($themes, "dark", "text-color");
  }

  &:hover {
    // @include common-transitions();
    color: map.get($themes, "light", "accent-color");
    @include accent-border();
    cursor: pointer;
  }

  & svg {
    color: map.get($themes, "light", "accent-color");
    margin-right: .5rem;

    .dark & {
      color: map.get($themes, "dark", "accent-color");
    }
  }
}

// ===========
// nav styling
// ===========
.main-nav {
  list-style-type: none;
  display: inline-flex;
  padding: 0;

  & li {
    align-items: center;
    display: inline-flex;
    flex-direction: column;
    justify-content: center;

    a { 
      text-decoration: none;
    }
  }
}

.small-nav {
  // @include hide-nav-item-above-screen();
  @include common-transitions-with-transform();
  @include show-hidden-nav-item();
  background-color: map.get($themes, "light", background-alt);
  border-radius: $common-border-radius;
  display: flex;
  justify-content: space-around;
  list-style-type: none;
  margin: 0;
  opacity: 0;
  padding: 1rem;
  position: fixed;
  right: 0;
  top: 6.4rem;
  transform: translateY(-3rem);
  width: 100vw;
  z-index: -100;

  @media (min-width: 768px) {
    @include hide-nav-item-above-screen();
    display: inline-flex;
  }

  &.active {
    opacity: 1;
    transform: translateY(0);
    // z-index: 100;
  }
}

.small-nav-list-item {
  @include common-transitions();

  margin-left: 0;
  padding-left: 0;
  width: 10rem;
  text-align: center;


  & a {
    display: block;
    width: 100%;

    &:hover {
      background-color: map.get($themes, "light", "background-color");
    }
  }

}

.main-nav-list-item {
  @include common-transitions();
  // background-color: $background-alt;
  align-items: center;
  margin: 0 1rem 0 0;
  padding-left: 0;
  min-height: 3rem;
  justify-content: center;
  text-align: center;
  
  &:hover {
  }

  &.main-nav-link-wrapper {
    @include hide-nav-item-above-screen();

    @media (min-width: 768px) {
      @include show-hidden-nav-item();
      display: inline-flex;
    }
  }
}

.main-nav-link {
  @include common-transitions();
  border: 2px solid transparent;
  color: map.get($themes, "light", "text-color");
  display: inline-block;
  margin: -1rem 0;
  padding: .4rem ;
  text-decoration: none;
  
  .dark & {
    color: map.get($themes, "dark", "text-color");
  }
  
  &:hover {
    @include accent-border();
    color: map.get($themes, "light", "accent-color");
  }
  
  &:active {
    color: map.get($themes, "light", "accent-color");
    
    .dark & {
      color: map.get($themes, "dark", "accent-color");
    }
  }

  &.active:not(&.active ~ &:hover) {
    @include accent-border();
    color: map.get($themes, "light", "accent-color");
    
    .dark & {
      color: map.get($themes, "light", "accent-color");
    }
  }
}

.main-nav-control {
  @include common-transitions-with-transform();
  // @include accent-border();
  align-items: center;
  // border-radius: 24px;
  border-color: transparent;
  border: $common-border;
  color: map.get($themes, "light", "accent-color");
  display: none;
  height: 2rem;
  opacity: 0;
  padding: .32rem;
  justify-content: center;
  transform: none;
  width: 2rem;
  
  &:hover {
    color: map.get($themes, "light", "text-color");
    cursor: pointer;
    
    .dark & {
      color: map.get($themes, "dark", "text-color");
    }
  }

  .dark & {
    color: map.get($themes, "dark", "accent-color");
  }

  &.active {
    opacity: 1;
    display: inline-flex;
  }

  &.toggle-menu {
    @include show-hidden-nav-item();
    @media (min-width: 768px) {
      @include hide-nav-item-above-screen();
    }
  }
}


// ============
// body styling
// ============
body {
  $body-top-padding: 7.5rem;
  $body-offset-menu-active: rem;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 0;
  min-height: 100vh;
  padding: 0;
  padding-top: $body-top-padding;
  position: relative;
  transform: none;
  width: 100vw;

  & > *:not(.non-header-body-wrapper), & > .non-header-body-wrapper > * {
    padding: $common-padding;
  }

  & > div {
    // @include common-transitions-with-transform();
  }

  &.menu-active {
    padding-top: calc($body-top-padding + $body-offset-menu-active);
  }
}

#content {
  @include responsive-widths();
  margin: 0 auto;
}

// TODO: Do I want to use this?
#content-controls {
  display: none;
  height: 100vh;
  left: 0;
  position: fixed;
  top: 0;
  width: calc(100vw - 768px);
}

button {
  @include common-transitions();
  
  background-color: transparent;
  border: $common-border solid map.get($themes, "light", "background-alt");
  border-radius: $common-border-radius;
  color: map.get($themes, "light", "accent-color");
  font-family: $main-font;
  font-weight: bold;
  padding: .75rem 1rem;
  
  .dark & {
    border: $common-border solid map.get($themes, "dark", "background-alt");
    color: map.get($themes, "dark", "accent-color");
  }
  
  &:hover {
    background-color: map.get($themes, "light", "background-alt");
    border-color: map.get($themes, "light", "background-alt");
    cursor: pointer;
    color: map.get($themes, "light", "text-color");
    
    
    .dark & {
      background-color: map.get($themes, "dark", "background-alt");
      border-color: map.get($themes, "dark", "background-alt");
      cursor: pointer;
      color: map.get($themes, "dark", "text-color");   
    }
  }

  &:active {
    color: $accent-color;
    filter: opacity(.8);
  }
}

// ==============
// footer styling
// ==============
footer {
  @include common-transitions();
  align-items: center;
  background-color: map.get($themes, "light", "background-alt");
  color: map.get($themes, "light", "text-color");
  display: flex;
  justify-content: center;
  margin-top: 2rem;
  text-align: center;
  width: 100%;
  
  .dark & {
    background-color: map.get($themes, "dark", "background-alt");
    color: map.get($themes, "dark", "text-color");
  }
  
  & p {
    // font-weight: bold;
    font-size: .8rem;
    margin: 0;
  }
}

// ===========
// prism theme
// ===========
code[class*="language-"],
pre[class*="language-"] {
	color: $red-pigment;
	// text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: "JetBrains Mono", Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace;
	direction: ltr;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	line-height: 1.5;

  .dark & {
    color: $international-orange-aerospace;
  }

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
	border-radius: 0.3em;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	// background: #1d1f21;
	background: map.get($themes, "light", "background-alt");
  
  .dark & {
    background: map.get($themes, "dark", "background-alt");
  }
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: #7C7C7C;
}

.token.punctuation {
  color: map.get($themes, "light", "text-color");
  
  .dark & {
    color: map.get($themes, "dark", "text-color");
  }
}

.namespace {
	opacity: .7;
}

.token.property,
.token.keyword,
.token.tag {
	// color: #96CBFE;
  color: map.get($themes, "light", "accent-color");
  
  .dark & {
    color: map.get($themes, "dark", "accent-color");
  }
}

.token.class-name {
	color: #FFFFB6;
	text-decoration: underline;
}

.token.boolean,
.token.constant {
	color: #99CC99;
}

.token.symbol,
.token.deleted {
	color: #f92672;
}

.token.number {
	color: #FF73FD;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: $feldgrau;

  .dark & {
    color: map.get($themes, "dark", "text-alt");
  }
}

.token.variable {
	color: #C6C5FE;
}

.token.operator {
  color: map.get($themes, "light", "text-color");
  
  .dark & {
    color: map.get($themes, "dark", "text-color");
  }
}

.token.entity {
	color: #FFFFB6;
	cursor: help;
}

.token.url {
	color: #96CBFE;
}

.language-css .token.string,
.style .token.string {
	color: $feldgrau;
}

.token.atrule,
.token.attr-value {
	color: #F9EE98;
}

.token.function {
  color: $international-orange-aerospace;

  .dark & {
    color: $orange-yellow-crayola;
  }
}

.token.regex {
	color: #E9C062;
}

.token.important {
	color: #fd971f;
}

.token.important,
.token.bold {
	font-weight: bold;
}

.token.italic {
	font-style: italic;
}